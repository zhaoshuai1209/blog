<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-4.0.xsd"
       default-lazy-init="true">

    <description>Shiro Configuration</description>

    <!-- shiroFilter工厂 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- 构建securityManager环境 -->
        <property name="securityManager" ref="securityManager" />
        <!-- 要求登录时的链接(可根据项目的URL进行替换),非必须的属性,默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->
        <!-- <property name="loginUrl" value="/sys/auth/logon"/> -->
        <!-- 登录成功后要跳转的连接 -->
        <property name="successUrl" value="/systemConfig/index.jsp"/>
        <!-- 没有权限返回的地址 （拒绝访问路径）-->
        <property name="unauthorizedUrl" value="/login.jsp" />
        <property name="filterChainDefinitions">
            <value>
                /login=anon
                /admin=anon
                /loginout=anon
                /admin/**=authc
                /static/**=anon
                <!-- /static/**=anon
                /static/css/**=anon
                /static/js/**=anon
                /static/fonts/**=anon
                /static/images/**=anon
                /static/sass/**=anon
                /static/video/**=anon
                /static/layui/**=anon
                /static/assets/**=anon -->
                /v1/**=authc
            </value>
        </property>
    </bean>
    <!-- securityManager -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--调用自定义realm -->
		<property name="realms">
			<list>
				<ref bean="realm"/>
			</list>
		</property>
    </bean>
    <bean id="realm" class="top.hjie.shiro.Realm"></bean>
    
    <!-- 配置使用自定义认证器，可以实现多Realm认证，并且可以指定特定Realm处理特定类型的验证 -->
   <!--  <bean id="authenticator" class="top.hjie.shiro.CustomizedModularRealmAuthenticator">
        配置认证策略，只要有一个Realm认证成功即可，并且返回所有认证成功信息
        <property name="authenticationStrategy">
            <bean class="org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy"></bean>
        </property>
    </bean> -->

    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- AOP式方法级权限检查  -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true" />
    </bean>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
</beans>